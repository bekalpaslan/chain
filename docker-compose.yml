version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: chain-postgres
    environment:
      POSTGRES_DB: chaindb
      POSTGRES_USER: chain_user
      POSTGRES_PASSWORD: chain_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chain_user -d chaindb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: chain-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chain-backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: chaindb
      DB_USER: chain_user
      DB_PASSWORD: chain_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-production-secret-key-minimum-256-bits-change-this
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
